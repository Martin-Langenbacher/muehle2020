# Start der Datenbank:
# ====================================================
# CREATE DATABASE IF NOT EXISTS `muehle2020`;
# CREATE USER IF NOT EXISTS 'muehle2020'@'localhost' IDENTIFIED BY 'L$m7Z3_KprruxqTt';
# GRANT ALL PRIVILEGES ON muehle2020.* TO 'muehle2020'@'localhost';




# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
# Connection url for the database
spring.datasource.url=jdbc:mysql://localhost:3306/muehle2020?serverTimezone=Europe/Paris
# Username and password
spring.datasource.username=muehle2020
spring.datasource.password=L$m7Z3_KprruxqTt
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=create
# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect



